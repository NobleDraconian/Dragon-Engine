{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dragon Engine Opensource MVC framework for creating your Roblox games Overview Dragon Engine is a singleton-oriented MVC Lua framework designed specificially for Roblox. It bridges the gap between the server and client, globally loads modules to allow for easy communication (this also helps to prevent cyclic requiring), and is designed to serve as the 'backbone' of the game it is in. Why Dragon Engine? Dragon Engine is designed to streamline the operations of your game. Instead of worrying the boilerplate of your game (networking, code communication, etc), the framework takes care of this for you so you can worry about the important stuff.","title":"Home"},{"location":"#dragon-engine","text":"Opensource MVC framework for creating your Roblox games","title":"Dragon Engine"},{"location":"#overview","text":"Dragon Engine is a singleton-oriented MVC Lua framework designed specificially for Roblox. It bridges the gap between the server and client, globally loads modules to allow for easy communication (this also helps to prevent cyclic requiring), and is designed to serve as the 'backbone' of the game it is in.","title":"Overview"},{"location":"#why-dragon-engine","text":"Dragon Engine is designed to streamline the operations of your game. Instead of worrying the boilerplate of your game (networking, code communication, etc), the framework takes care of this for you so you can worry about the important stuff.","title":"Why Dragon Engine?"},{"location":"Test/","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 --[[ Example Service This is an example service to display how a service is created and how it should be formatted. --]] local ExampleService = {} --------------------- -- Roblox Services -- --------------------- ------------- -- DEFINES -- ------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- -- @Name : Init -- @Description : Called when the service module is first loaded. ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- function ExampleService : Init () self:DebugLog( \"[Example Service] Initialized!\" ) end ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- -- @Name : Start -- @Description : Called after all services are loaded. ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- function ExampleService : Start () self:DebugLog( \"[Example Service] Started!\" ) end return ExampleService Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]","title":"Test"},{"location":"API/Client/","text":"","title":"Framework client API"},{"location":"API/Core/","text":"","title":"Framework core API"},{"location":"API/Server/","text":"","title":"Framework server API"},{"location":"About/Contributing/","text":"Contributing to Dragon Engine Dragon Engine depends on and grows with contributions from developers and users in the Roblox open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Code of Conduct We expect everyone to use the Contributor Covenant Code of Conduct . Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at BinaryByte.DEV@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Contributing"},{"location":"About/Contributing/#contributing-to-dragon-engine","text":"Dragon Engine depends on and grows with contributions from developers and users in the Roblox open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements","title":"Contributing to Dragon Engine"},{"location":"About/Contributing/#code-of-conduct","text":"We expect everyone to use the Contributor Covenant Code of Conduct .","title":"Code of Conduct"},{"location":"About/Contributing/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"About/Contributing/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"About/Contributing/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"About/Contributing/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"About/Contributing/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at BinaryByte.DEV@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"About/Contributing/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"About/License/","text":"License Dragon Engine falls under the MIT license. For licensing on any 3rd party dependencies or projects used in this framework, please refer to their respective repositories. MIT License Copyright (c) 2019 Jayden Charbonneau Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"About/License/#license","text":"Dragon Engine falls under the MIT license. For licensing on any 3rd party dependencies or projects used in this framework, please refer to their respective repositories. MIT License Copyright (c) 2019 Jayden Charbonneau Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"About/ReleaseNotes/","text":"Release Notes All of our release notes for each release of the framework are documented here. Version X.X.X (YYYY-MM-DD)","title":"Release Notes"},{"location":"About/ReleaseNotes/#release-notes","text":"All of our release notes for each release of the framework are documented here.","title":"Release Notes"},{"location":"About/ReleaseNotes/#version-xxx-yyyy-mm-dd","text":"","title":"Version X.X.X (YYYY-MM-DD)"}]}